!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);var i,r=function(){function t(){}return t.prototype.set_x=function(t){this.x_=t},t.prototype.set_y=function(t){this.y_=t},t.prototype.set_z=function(t){this.z_=t},t.prototype.set_w=function(t){this.w_=t},t.prototype.x=function(){return this.x_},t.prototype.y=function(){return this.y_},t.prototype.z=function(){return this.z_},t.prototype.w=function(){return this.w_},t.prototype.red=function(){return this.x_},t.prototype.gre=function(){return this.y_},t.prototype.blu=function(){return this.z_},t.prototype.hue=function(){return this.x_},t.prototype.sat=function(){return this.y_},t.prototype.bri=function(){return this.z_},t.prototype.alp=function(){return this.w_},t.prototype.mult=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];1==t.length?(this.x_*=t[0],this.y_*=t[0],this.z_*=t[0],this.w_*=t[0]):2==t.length?(this.x_*=t[0],this.y_*=t[1]):3==t.length?(this.x_*=t[0],this.y_*=t[1],this.z_*=t[2]):4==t.length&&(this.x_*=t[0],this.y_*=t[1],this.z_*=t[2],this.w_*=t[3]),this.set_x(this.x_),this.set_y(this.y_),this.set_z(this.z_),this.set_w(this.w_)},t.prototype.div=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];1==t.length?(this.x_/=t[0],this.y_/=t[0],this.z_/=t[0],this.w_/=t[0]):2==t.length?(this.x_/=t[0],this.y_/=t[1]):3==t.length?(this.x_/=t[0],this.y_/=t[1],this.z_/=t[2]):4==t.length&&(this.x_/=t[0],this.y_/=t[1],this.z_/=t[2],this.w_/=t[3]),this.set_x(this.x_),this.set_y(this.y_),this.set_z(this.z_),this.set_w(this.w_)},t.prototype.add=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];1==t.length?(this.x_+=t[0],this.y_+=t[0],this.z_+=t[0],this.w_+=t[0]):2==t.length?(this.x_+=t[0],this.y_+=t[1]):3==t.length?(this.x_+=t[0],this.y_+=t[1],this.z_+=t[2]):4==t.length&&(this.x_+=t[0],this.y_+=t[1],this.z_+=t[2],this.w_+=t[3]),this.set_x(this.x_),this.set_y(this.y_),this.set_z(this.z_),this.set_w(this.w_)},t.prototype.sub=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];1==t.length?(this.x_-=t[0],this.y_-=t[0],this.z_-=t[0],this.w_-=t[0]):2==t.length?(this.x_-=t[0],this.y_-=t[1]):3==t.length?(this.x_-=t[0],this.y_-=t[1],this.z_-=t[2]):4==t.length&&(this.x_-=t[0],this.y_-=t[1],this.z_-=t[2],this.w_-=t[3]),this.set_x(this.x_),this.set_y(this.y_),this.set_z(this.z_),this.set_w(this.w_)},t.prototype.xy=function(){var e=new t;return e.set_x(this.x_),e.set_y(this.y_),e},t.prototype.xyz=function(){var e=new t;return e.set_x(this.x_),e.set_y(this.y_),e.set_z(this.z_),e},t.prototype.xyzw=function(){var e=new t;return e.set_x(this.x_),e.set_y(this.y_),e.set_z(this.z_),e.set_w(this.w_),e},t}(),s=(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),o=function(t){function e(e,n,i){var r=t.call(this)||this;if(n>i)throw new Error(e+" input is "+n+" and the max is "+i+" this results in an invalid entry");return r}return s(e,t),e}(Error),h=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),_=function(t){function e(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var i=t.call(this)||this;return 1==e.length&&(i.x_=e[0],i.y_=e[0]),2==e.length?(i.x_=e[0],i.y_=e[1]):new o("class vec2 constructor() need 1 or 2 arguments",e.length,2),i}return h(e,t),e.prototype.set=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];1==e.length&&(this.x_=e[0],this.y_=e[0]),2==e.length?(this.x_=e[0],this.y_=e[1]):new o("class vec2 method set() need 1 or 2 arguments",e.length,2),t.prototype.set_x.call(this,this.x_),t.prototype.set_y.call(this,this.y_)},e}(r),u=(new p5(function(t){t.preload=function(){},t.setup=function(){t.createCanvas(t.windowWidth,t.windowHeight),u=t.windowWidth,y=t.windowHeight;for(var e=(a=u/f)/2,n=(l=y/p)/2,i=new _(u/2,y/2),r=0;r<p;r++)for(var s=0;s<f;s++){var o=new _(s*a+e,r*l+n);o.sub(i.x(),i.y()),c.push(o)}},t.windowResized=function(){t.createCanvas(t.windowWidth,t.windowHeight,t.WEBGL),u=t.windowWidth,y=t.windowHeight};var e=0;t.draw=function(){t.background(255,0,0),e>=c.length&&(e=0);for(var n=0;n<c.length;n++){if(t.strokeWeight(5),t.point(c[n].x(),c[n].y()),t.strokeWeight(1),n==e){var i=t.sin(.01*t.frameCount)*(3*l);c[n].set_y(c[n].y()+i);var r=void 0;if(w)r=t.sin(.02*t.frameCount)*(3*a);else{var s=5*a;r=t.random(-s,s)}c[n].set_x(c[n].x()+r)}var o=n,h=new _(c[o].x(),c[o].y()),u=o+1;u==c.length&&(u=0);var y=new _(c[u].x(),c[u].y());n%f!=f-1&&t.line(h.x(),h.y(),y.x(),y.y())}e++},t.keyPressed=function(){w=!0},t.keyReleased=function(){w=!1}}),0),y=0,c=new Array,f=30,p=30,a=0,l=0,w=!1}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,