!function(t){var n={};function e(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:i})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var r in t)e.d(i,r,function(n){return t[n]}.bind(null,r));return i},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(t,n,e){"use strict";e.r(n);var i,r=function(){function t(){}return t.prototype.set_x=function(t){this.x_=t},t.prototype.set_y=function(t){this.y_=t},t.prototype.set_z=function(t){this.z_=t},t.prototype.set_w=function(t){this.w_=t},t.prototype.x=function(){return this.x_},t.prototype.y=function(){return this.y_},t.prototype.z=function(){return this.z_},t.prototype.w=function(){return this.w_},t.prototype.red=function(){return this.x_},t.prototype.gre=function(){return this.y_},t.prototype.blu=function(){return this.z_},t.prototype.hue=function(){return this.x_},t.prototype.sat=function(){return this.y_},t.prototype.bri=function(){return this.z_},t.prototype.alp=function(){return this.w_},t.prototype.mult=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];1==t.length?(this.x_*=t[0],this.y_*=t[0],this.z_*=t[0],this.w_*=t[0]):2==t.length?(this.x_*=t[0],this.y_*=t[1]):3==t.length?(this.x_*=t[0],this.y_*=t[1],this.z_*=t[2]):4==t.length&&(this.x_*=t[0],this.y_*=t[1],this.z_*=t[2],this.w_*=t[3]),this.set_x(this.x_),this.set_y(this.y_),this.set_z(this.z_),this.set_w(this.w_)},t.prototype.div=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];1==t.length?(this.x_/=t[0],this.y_/=t[0],this.z_/=t[0],this.w_/=t[0]):2==t.length?(this.x_/=t[0],this.y_/=t[1]):3==t.length?(this.x_/=t[0],this.y_/=t[1],this.z_/=t[2]):4==t.length&&(this.x_/=t[0],this.y_/=t[1],this.z_/=t[2],this.w_/=t[3]),this.set_x(this.x_),this.set_y(this.y_),this.set_z(this.z_),this.set_w(this.w_)},t.prototype.add=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];1==t.length?(this.x_+=t[0],this.y_+=t[0],this.z_+=t[0],this.w_+=t[0]):2==t.length?(this.x_+=t[0],this.y_+=t[1]):3==t.length?(this.x_+=t[0],this.y_+=t[1],this.z_+=t[2]):4==t.length&&(this.x_+=t[0],this.y_+=t[1],this.z_+=t[2],this.w_+=t[3]),this.set_x(this.x_),this.set_y(this.y_),this.set_z(this.z_),this.set_w(this.w_)},t.prototype.sub=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];1==t.length?(this.x_-=t[0],this.y_-=t[0],this.z_-=t[0],this.w_-=t[0]):2==t.length?(this.x_-=t[0],this.y_-=t[1]):3==t.length?(this.x_-=t[0],this.y_-=t[1],this.z_-=t[2]):4==t.length&&(this.x_-=t[0],this.y_-=t[1],this.z_-=t[2],this.w_-=t[3]),this.set_x(this.x_),this.set_y(this.y_),this.set_z(this.z_),this.set_w(this.w_)},t.prototype.xy=function(){var n=new t;return n.set_x(this.x_),n.set_y(this.y_),n},t.prototype.xyz=function(){var n=new t;return n.set_x(this.x_),n.set_y(this.y_),n.set_z(this.z_),n},t.prototype.xyzw=function(){var n=new t;return n.set_x(this.x_),n.set_y(this.y_),n.set_z(this.z_),n.set_w(this.w_),n},t}(),o=(i=function(t,n){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])})(t,n)},function(t,n){function e(){this.constructor=t}i(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}),s=function(t){function n(n,e,i){var r=t.call(this)||this;if(e>i)throw new Error(n+" input is "+e+" and the max is "+i+" this results in an invalid entry");return r}return o(n,t),n}(Error),h=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])})(n,e)};return function(n,e){function i(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}}(),_=function(t){function n(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];var i=t.call(this)||this;return 1==n.length&&(i.x_=n[0],i.y_=n[0]),2==n.length?(i.x_=n[0],i.y_=n[1]):new s("class vec2 constructor() need 1 or 2 arguments",n.length,2),i}return h(n,t),n.prototype.set=function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];1==n.length&&(this.x_=n[0],this.y_=n[0]),2==n.length?(this.x_=n[0],this.y_=n[1]):new s("class vec2 method set() need 1 or 2 arguments",n.length,2),t.prototype.set_x.call(this,this.x_),t.prototype.set_y.call(this,this.y_)},n}(r);function u(){p=new Array;for(var t=(w=c/a)/2,n=(x=f/l)/2,e=new _(c/2,f/2),i=0;i<l;i++)for(var r=0;r<a;r++){var o=new _(r*w+t,i*x+n);o.sub(e.x(),e.y()),p.push(o)}}var y=0,c=(new p5(function(t){t.preload=function(){},t.setup=function(){t.createCanvas(t.windowWidth,t.windowHeight,t.WEBGL),c=t.windowWidth,f=t.windowHeight,u()},t.windowResized=function(){t.createCanvas(t.windowWidth,t.windowHeight,t.WEBGL),c=t.windowWidth,f=t.windowHeight,u()},t.draw=function(){t.background(255,0,0),function(t){y>=p.length&&(y=0);for(var n=0;n<p.length;n++){if(t.strokeWeight(5),t.point(p[n].x(),p[n].y()),t.strokeWeight(1),n==y){var e=t.sin(.01*t.frameCount)*(3*x);p[n].set_y(p[n].y()+e);var i=void 0;if(g)i=t.sin(.02*t.frameCount)*(3*w);else{var r=5*w;i=t.random(-r,r)}p[n].set_x(p[n].x()+i)}var o=n,s=new _(p[o].x(),p[o].y()),h=o+1;h==p.length&&(h=0);var u=new _(p[h].x(),p[h].y());n%a!=a-1&&t.line(s.x(),s.y(),u.x(),u.y())}y++}(t)},t.keyPressed=function(){g=!0},t.keyReleased=function(){g=!1}}),0),f=0,p=new Array,a=30,l=30,w=0,x=0,g=!1}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,